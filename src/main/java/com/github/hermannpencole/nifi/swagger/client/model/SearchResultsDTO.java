/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.5.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.hermannpencole.nifi.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.hermannpencole.nifi.swagger.client.model.ComponentSearchResultDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SearchResultsDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-03T16:29:45.931+01:00")
public class SearchResultsDTO {
  @SerializedName("processorResults")
  private List<ComponentSearchResultDTO> processorResults = null;

  @SerializedName("connectionResults")
  private List<ComponentSearchResultDTO> connectionResults = null;

  @SerializedName("processGroupResults")
  private List<ComponentSearchResultDTO> processGroupResults = null;

  @SerializedName("inputPortResults")
  private List<ComponentSearchResultDTO> inputPortResults = null;

  @SerializedName("outputPortResults")
  private List<ComponentSearchResultDTO> outputPortResults = null;

  @SerializedName("remoteProcessGroupResults")
  private List<ComponentSearchResultDTO> remoteProcessGroupResults = null;

  @SerializedName("funnelResults")
  private List<ComponentSearchResultDTO> funnelResults = null;

  public SearchResultsDTO processorResults(List<ComponentSearchResultDTO> processorResults) {
    this.processorResults = processorResults;
    return this;
  }

  public SearchResultsDTO addProcessorResultsItem(ComponentSearchResultDTO processorResultsItem) {
    if (this.processorResults == null) {
      this.processorResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.processorResults.add(processorResultsItem);
    return this;
  }

   /**
   * The processors that matched the search.
   * @return processorResults
  **/
  @ApiModelProperty(value = "The processors that matched the search.")
  public List<ComponentSearchResultDTO> getProcessorResults() {
    return processorResults;
  }

  public void setProcessorResults(List<ComponentSearchResultDTO> processorResults) {
    this.processorResults = processorResults;
  }

  public SearchResultsDTO connectionResults(List<ComponentSearchResultDTO> connectionResults) {
    this.connectionResults = connectionResults;
    return this;
  }

  public SearchResultsDTO addConnectionResultsItem(ComponentSearchResultDTO connectionResultsItem) {
    if (this.connectionResults == null) {
      this.connectionResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.connectionResults.add(connectionResultsItem);
    return this;
  }

   /**
   * The connections that matched the search.
   * @return connectionResults
  **/
  @ApiModelProperty(value = "The connections that matched the search.")
  public List<ComponentSearchResultDTO> getConnectionResults() {
    return connectionResults;
  }

  public void setConnectionResults(List<ComponentSearchResultDTO> connectionResults) {
    this.connectionResults = connectionResults;
  }

  public SearchResultsDTO processGroupResults(List<ComponentSearchResultDTO> processGroupResults) {
    this.processGroupResults = processGroupResults;
    return this;
  }

  public SearchResultsDTO addProcessGroupResultsItem(ComponentSearchResultDTO processGroupResultsItem) {
    if (this.processGroupResults == null) {
      this.processGroupResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.processGroupResults.add(processGroupResultsItem);
    return this;
  }

   /**
   * The process groups that matched the search.
   * @return processGroupResults
  **/
  @ApiModelProperty(value = "The process groups that matched the search.")
  public List<ComponentSearchResultDTO> getProcessGroupResults() {
    return processGroupResults;
  }

  public void setProcessGroupResults(List<ComponentSearchResultDTO> processGroupResults) {
    this.processGroupResults = processGroupResults;
  }

  public SearchResultsDTO inputPortResults(List<ComponentSearchResultDTO> inputPortResults) {
    this.inputPortResults = inputPortResults;
    return this;
  }

  public SearchResultsDTO addInputPortResultsItem(ComponentSearchResultDTO inputPortResultsItem) {
    if (this.inputPortResults == null) {
      this.inputPortResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.inputPortResults.add(inputPortResultsItem);
    return this;
  }

   /**
   * The input ports that matched the search.
   * @return inputPortResults
  **/
  @ApiModelProperty(value = "The input ports that matched the search.")
  public List<ComponentSearchResultDTO> getInputPortResults() {
    return inputPortResults;
  }

  public void setInputPortResults(List<ComponentSearchResultDTO> inputPortResults) {
    this.inputPortResults = inputPortResults;
  }

  public SearchResultsDTO outputPortResults(List<ComponentSearchResultDTO> outputPortResults) {
    this.outputPortResults = outputPortResults;
    return this;
  }

  public SearchResultsDTO addOutputPortResultsItem(ComponentSearchResultDTO outputPortResultsItem) {
    if (this.outputPortResults == null) {
      this.outputPortResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.outputPortResults.add(outputPortResultsItem);
    return this;
  }

   /**
   * The output ports that matched the search.
   * @return outputPortResults
  **/
  @ApiModelProperty(value = "The output ports that matched the search.")
  public List<ComponentSearchResultDTO> getOutputPortResults() {
    return outputPortResults;
  }

  public void setOutputPortResults(List<ComponentSearchResultDTO> outputPortResults) {
    this.outputPortResults = outputPortResults;
  }

  public SearchResultsDTO remoteProcessGroupResults(List<ComponentSearchResultDTO> remoteProcessGroupResults) {
    this.remoteProcessGroupResults = remoteProcessGroupResults;
    return this;
  }

  public SearchResultsDTO addRemoteProcessGroupResultsItem(ComponentSearchResultDTO remoteProcessGroupResultsItem) {
    if (this.remoteProcessGroupResults == null) {
      this.remoteProcessGroupResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.remoteProcessGroupResults.add(remoteProcessGroupResultsItem);
    return this;
  }

   /**
   * The remote process groups that matched the search.
   * @return remoteProcessGroupResults
  **/
  @ApiModelProperty(value = "The remote process groups that matched the search.")
  public List<ComponentSearchResultDTO> getRemoteProcessGroupResults() {
    return remoteProcessGroupResults;
  }

  public void setRemoteProcessGroupResults(List<ComponentSearchResultDTO> remoteProcessGroupResults) {
    this.remoteProcessGroupResults = remoteProcessGroupResults;
  }

  public SearchResultsDTO funnelResults(List<ComponentSearchResultDTO> funnelResults) {
    this.funnelResults = funnelResults;
    return this;
  }

  public SearchResultsDTO addFunnelResultsItem(ComponentSearchResultDTO funnelResultsItem) {
    if (this.funnelResults == null) {
      this.funnelResults = new ArrayList<ComponentSearchResultDTO>();
    }
    this.funnelResults.add(funnelResultsItem);
    return this;
  }

   /**
   * The funnels that matched the search.
   * @return funnelResults
  **/
  @ApiModelProperty(value = "The funnels that matched the search.")
  public List<ComponentSearchResultDTO> getFunnelResults() {
    return funnelResults;
  }

  public void setFunnelResults(List<ComponentSearchResultDTO> funnelResults) {
    this.funnelResults = funnelResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResultsDTO searchResultsDTO = (SearchResultsDTO) o;
    return Objects.equals(this.processorResults, searchResultsDTO.processorResults) &&
        Objects.equals(this.connectionResults, searchResultsDTO.connectionResults) &&
        Objects.equals(this.processGroupResults, searchResultsDTO.processGroupResults) &&
        Objects.equals(this.inputPortResults, searchResultsDTO.inputPortResults) &&
        Objects.equals(this.outputPortResults, searchResultsDTO.outputPortResults) &&
        Objects.equals(this.remoteProcessGroupResults, searchResultsDTO.remoteProcessGroupResults) &&
        Objects.equals(this.funnelResults, searchResultsDTO.funnelResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processorResults, connectionResults, processGroupResults, inputPortResults, outputPortResults, remoteProcessGroupResults, funnelResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResultsDTO {\n");
    
    sb.append("    processorResults: ").append(toIndentedString(processorResults)).append("\n");
    sb.append("    connectionResults: ").append(toIndentedString(connectionResults)).append("\n");
    sb.append("    processGroupResults: ").append(toIndentedString(processGroupResults)).append("\n");
    sb.append("    inputPortResults: ").append(toIndentedString(inputPortResults)).append("\n");
    sb.append("    outputPortResults: ").append(toIndentedString(outputPortResults)).append("\n");
    sb.append("    remoteProcessGroupResults: ").append(toIndentedString(remoteProcessGroupResults)).append("\n");
    sb.append("    funnelResults: ").append(toIndentedString(funnelResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

