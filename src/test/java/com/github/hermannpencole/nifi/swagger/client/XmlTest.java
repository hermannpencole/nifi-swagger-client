/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.hermannpencole.nifi.swagger.client;

import com.github.hermannpencole.nifi.swagger.ApiException;
import com.github.hermannpencole.nifi.swagger.XML;
import com.github.hermannpencole.nifi.swagger.client.model.TemplateEntity;
import org.junit.Test;

import java.io.IOException;

/**
 * API tests for AccessApi
 */
public class XmlTest {


    @Test
    public void deserializeTest() throws ApiException, IOException {
        String respValue="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><templateEntity><template encoding-version=\"2.0\"><description>version 1.0</description><groupId>8c24bb5e-015c-1000-4644-5468bf01cb50</groupId><id>ebfccf01-50e9-45a4-b923-4452fe8143d5</id><name>my</name><uri>http://localhost:8080/nifi-api/templates/ebfccf01-50e9-45a4-b923-4452fe8143d5</uri></template></templateEntity>";
       TemplateEntity resp = new XML().deserialize(respValue, TemplateEntity.class);
       assert(resp != null);
       assert(resp.getTemplate() != null);
       assert(resp.getTemplate().getName().equals("my") );
        assert(resp.getTemplate().getId().equals("ebfccf01-50e9-45a4-b923-4452fe8143d5"));
    }

    @Test
    public void deserializeTestFault(){
        String error = "<errorResponse status=\"400\" statusText=\"A template named 'my' already exists.\"/>";
        try {
            TemplateEntity resp = new XML().deserialize(error, TemplateEntity.class);
            assert(false);
        } catch (ApiException e) {
            assert(e.getMessage().equals("A template named 'my' already exists."));
        }
    }

    @Test
    public void deserializeTestFault2(){
        String error = "<autreErreur ici/>";
        try {
            TemplateEntity resp = new XML().deserialize(error, TemplateEntity.class);
            assert(false);
        } catch (ApiException e) {
            assert(e.getMessage().equals("<autreErreur ici/>"));
        }
    }

}
